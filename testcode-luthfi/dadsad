[1mdiff --git a/.gitignore b/.gitignore[m
[1mdeleted file mode 100644[m
[1mindex 549e00a..0000000[m
[1m--- a/.gitignore[m
[1m+++ /dev/null[m
[36m@@ -1,33 +0,0 @@[m
[31m-HELP.md[m
[31m-target/[m
[31m-!.mvn/wrapper/maven-wrapper.jar[m
[31m-!**/src/main/**/target/[m
[31m-!**/src/test/**/target/[m
[31m-[m
[31m-### STS ###[m
[31m-.apt_generated[m
[31m-.classpath[m
[31m-.factorypath[m
[31m-.project[m
[31m-.settings[m
[31m-.springBeans[m
[31m-.sts4-cache[m
[31m-[m
[31m-### IntelliJ IDEA ###[m
[31m-.idea[m
[31m-*.iws[m
[31m-*.iml[m
[31m-*.ipr[m
[31m-[m
[31m-### NetBeans ###[m
[31m-/nbproject/private/[m
[31m-/nbbuild/[m
[31m-/dist/[m
[31m-/nbdist/[m
[31m-/.nb-gradle/[m
[31m-build/[m
[31m-!**/src/main/**/build/[m
[31m-!**/src/test/**/build/[m
[31m-[m
[31m-### VS Code ###[m
[31m-.vscode/[m
[1mdiff --git a/.mvn/wrapper/maven-wrapper.properties b/.mvn/wrapper/maven-wrapper.properties[m
[1mdeleted file mode 100644[m
[1mindex aeccdfd..0000000[m
[1m--- a/.mvn/wrapper/maven-wrapper.properties[m
[1m+++ /dev/null[m
[36m@@ -1,18 +0,0 @@[m
[31m-# Licensed to the Apache Software Foundation (ASF) under one[m
[31m-# or more contributor license agreements.  See the NOTICE file[m
[31m-# distributed with this work for additional information[m
[31m-# regarding copyright ownership.  The ASF licenses this file[m
[31m-# to you under the Apache License, Version 2.0 (the[m
[31m-# "License"); you may not use this file except in compliance[m
[31m-# with the License.  You may obtain a copy of the License at[m
[31m-#[m
[31m-#   https://www.apache.org/licenses/LICENSE-2.0[m
[31m-#[m
[31m-# Unless required by applicable law or agreed to in writing,[m
[31m-# software distributed under the License is distributed on an[m
[31m-# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[31m-# KIND, either express or implied.  See the License for the[m
[31m-# specific language governing permissions and limitations[m
[31m-# under the License.[m
[31m-wrapperVersion=3.3.1[m
[31m-distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.9.6/apache-maven-3.9.6-bin.zip[m
[1mdiff --git a/backend b/backend[m
[1mnew file mode 160000[m
[1mindex 0000000..738b2d8[m
[1m--- /dev/null[m
[1m+++ b/backend[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mSubproject commit 738b2d86eafdf36120bd114f81f6d7b25e398ac0[m
[1mdiff --git a/frontend b/frontend[m
[1mnew file mode 160000[m
[1mindex 0000000..0fff3ee[m
[1m--- /dev/null[m
[1m+++ b/frontend[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mSubproject commit 0fff3ee9386095a6516c9bfdbe6f558b14fc34af[m
[1mdiff --git a/logs/app.log b/logs/app.log[m
[1mdeleted file mode 100644[m
[1mindex a31813c..0000000[m
[1m--- a/logs/app.log[m
[1m+++ /dev/null[m
[36m@@ -1,11 +0,0 @@[m
[31m-2024-05-31 10:42:14 [http-nio-8080-exec-6] INFO  c.b.controller.AccountController - Login successful for username: test[m
[31m-2024-05-31 11:17:13 [http-nio-8080-exec-9] ERROR c.b.controller.AccountController - Login failed for username: s: No value present[m
[31m-2024-05-31 11:17:19 [http-nio-8080-exec-1] INFO  c.b.controller.AccountController - Login successful for username: test[m
[31m-2024-05-31 11:19:33 [http-nio-8080-exec-4] INFO  c.b.controller.AccountController - Login successful for username: test[m
[31m-2024-05-31 11:21:53 [http-nio-8080-exec-7] INFO  c.b.controller.AccountController - Login successful for username: test[m
[31m-2024-05-31 11:25:21 [http-nio-8080-exec-10] INFO  c.b.controller.AccountController - Login successful for username: test[m
[31m-2024-05-31 11:26:23 [http-nio-8080-exec-3] ERROR c.b.controller.AccountController - Login failed for username: test: Bad credentials[m
[31m-2024-05-31 11:26:27 [http-nio-8080-exec-5] INFO  c.b.controller.AccountController - Login successful for username: test[m
[31m-2024-05-31 11:30:17 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'[m
[31m-2024-05-31 11:30:17 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...[m
[31m-2024-05-31 11:30:18 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.[m
[1mdiff --git a/mvnw b/mvnw[m
[1mdeleted file mode 100644[m
[1mindex ba9212a..0000000[m
[1m--- a/mvnw[m
[1m+++ /dev/null[m
[36m@@ -1,250 +0,0 @@[m
[31m-#!/bin/sh[m
[31m-# ----------------------------------------------------------------------------[m
[31m-# Licensed to the Apache Software Foundation (ASF) under one[m
[31m-# or more contributor license agreements.  See the NOTICE file[m
[31m-# distributed with this work for additional information[m
[31m-# regarding copyright ownership.  The ASF licenses this file[m
[31m-# to you under the Apache License, Version 2.0 (the[m
[31m-# "License"); you may not use this file except in compliance[m
[31m-# with the License.  You may obtain a copy of the License at[m
[31m-#[m
[31m-#    https://www.apache.org/licenses/LICENSE-2.0[m
[31m-#[m
[31m-# Unless required by applicable law or agreed to in writing,[m
[31m-# software distributed under the License is distributed on an[m
[31m-# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[31m-# KIND, either express or implied.  See the License for the[m
[31m-# specific language governing permissions and limitations[m
[31m-# under the License.[m
[31m-# ----------------------------------------------------------------------------[m
[31m-[m
[31m-# ----------------------------------------------------------------------------[m
[31m-# Apache Maven Wrapper startup batch script, version 3.3.1[m
[31m-#[m
[31m-# Optional ENV vars[m
[31m-# -----------------[m
[31m-#   JAVA_HOME - location of a JDK home dir, required when download maven via java source[m
[31m-#   MVNW_REPOURL - repo url base for downloading maven distribution[m
[31m-#   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven[m
[31m-#   MVNW_VERBOSE - true: enable verbose log; debug: trace the mvnw script; others: silence the output[m
[31m-# ----------------------------------------------------------------------------[m
[31m-[m
[31m-set -euf[m
[31m-[ "${MVNW_VERBOSE-}" != debug ] || set -x[m
[31m-[m
[31m-# OS specific support.[m
[31m-native_path() { printf %s\\n "$1"; }[m
[31m-case "$(uname)" in[m
[31m-CYGWIN* | MINGW*)[m
[31m-  [ -z "${JAVA_HOME-}" ] || JAVA_HOME="$(cygpath --unix "$JAVA_HOME")"[m
[31m-  native_path() { cygpath --path --windows "$1"; }[m
[31m-  ;;[m
[31m-esac[m
[31m-[m
[31m-# set JAVACMD and JAVACCMD[m
[31m-set_java_home() {[m
[31m-  # For Cygwin and MinGW, ensure paths are in Unix format before anything is touched[m
[31m-  if [ -n "${JAVA_HOME-}" ]; then[m
[31m-    if [ -x "$JAVA_HOME/jre/sh/java" ]; then[m
[31m-      # IBM's JDK on AIX uses strange locations for the executables[m
[31m-      JAVACMD="$JAVA_HOME/jre/sh/java"[m
[31m-      JAVACCMD="$JAVA_HOME/jre/sh/javac"[m
[31m-    else[m
[31m-      JAVACMD="$JAVA_HOME/bin/java"[m
[31m-      JAVACCMD="$JAVA_HOME/bin/javac"[m
[31m-[m
[31m-      if [ ! -x "$JAVACMD" ] || [ ! -x "$JAVACCMD" ]; then[m
[31m-        echo "The JAVA_HOME environment variable is not defined correctly, so mvnw cannot run." >&2[m
[31m-        echo "JAVA_HOME is set to \"$JAVA_HOME\", but \"\$JAVA_HOME/bin/java\" or \"\$JAVA_HOME/bin/javac\" does not exist." >&2[m
[31m-        return 1[m
[31m-      fi[m
[31m-    fi[m
[31m-  else[m
[31m-    JAVACMD="$([m
[31m-      'set' +e[m
[31m-      'unset' -f command 2>/dev/null[m
[31m-      'command' -v java[m
[31m-    )" || :[m
[31m-    JAVACCMD="$([m
[31m-      'set' +e[m
[31m-      'unset' -f command 2>/dev/null[m
[31m-      'command' -v javac[m
[31m-    )" || :[m
[31m-[m
[31m-    if [ ! -x "${JAVACMD-}" ] || [ ! -x "${JAVACCMD-}" ]; then[m
[31m-      echo "The java/javac command does not exist in PATH nor is JAVA_HOME set, so mvnw cannot run." >&2[m
[31m-      return 1[m
[31m-    fi[m
[31m-  fi[m
[31m-}[m
[31m-[m
[31m-# hash string like Java String::hashCode[m
[31m-hash_string() {[m
[31m-  str="${1:-}" h=0[m
[31m-  while [ -n "$str" ]; do[m
[31m-    char="${str%"${str#?}"}"[m
[31m-    h=$(((h * 31 + $(LC_CTYPE=C printf %d "'$char")) % 4294967296))[m
[31m-    str="${str#?}"[m
[31m-  done[m
[31m-  printf %x\\n $h[m
[31m-}[m
[31m-[m
[31m-verbose() { :; }[m
[31m-[ "${MVNW_VERBOSE-}" != true ] || verbose() { printf %s\\n "${1-}"; }[m
[31m-[m
[31m-die() {[m
[31m-  printf %s\\n "$1" >&2[m
[31m-  exit 1[m
[31m-}[m
[31m-[m
[31m-# parse distributionUrl and optional distributionSha256Sum, requires .mvn/wrapper/maven-wrapper.properties[m
[31m-while IFS="=" read -r key value; do[m
[31m-  case "${key-}" in[m
[31m-  distributionUrl) distributionUrl="${value-}" ;;[m
[31m-  distributionSha256Sum) distributionSha256Sum="${value-}" ;;[m
[31m-  esac[m
[31m-done <"${0%/*}/.mvn/wrapper/maven-wrapper.properties"[m
[31m-[ -n "${distributionUrl-}" ] || die "cannot read distributionUrl property in ${0%/*}/.mvn/wrapper/maven-wrapper.properties"[m
[31m-[m
[31m-case "${distributionUrl##*/}" in[m
[31m-maven-mvnd-*bin.*)[m
[31m-  MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/[m
[31m-  case "${PROCESSOR_ARCHITECTURE-}${PROCESSOR_ARCHITEW6432-}:$(uname -a)" in[m
[31m-  *AMD64:CYGWIN* | *AMD64:MINGW*) distributionPlatform=windows-amd64 ;;[m
[31m-  :Darwin*x86_64) distributionPlatform=darwin-amd64 ;;[m
[31m-  :Darwin*arm64) distributionPlatform=darwin-aarch64 ;;[m
[31m-  :Linux*x86_64*) distributionPlatform=linux-amd64 ;;[m
[31m-  *)[m
[31m-    echo "Cannot detect native platform for mvnd on $(uname)-$(uname -m), use pure java version" >&2[m
[31m-    distributionPlatform=linux-amd64[m
[31m-    ;;[m
[31m-  esac[m
[31m-  distributionUrl="${distributionUrl%-bin.*}-$distributionPlatform.zip"[m
[31m-  ;;[m
[31m-maven-mvnd-*) MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/ ;;[m
[31m-*) MVN_CMD="mvn${0##*/mvnw}" _MVNW_REPO_PATTERN=/org/apache/maven/ ;;[m
[31m-esac[m
[31m-[m
[31m-# apply MVNW_REPOURL and calculate MAVEN_HOME[m
[31m-# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>[m
[31m-[ -z "${MVNW_REPOURL-}" ] || distributionUrl="$MVNW_REPOURL$_MVNW_REPO_PATTERN${distributionUrl#*"$_MVNW_REPO_PATTERN"}"[m
[31m-distributionUrlName="${distributionUrl##*/}"[m
[31m-distributionUrlNameMain="${distributionUrlName%.*}"[m
[31m-distributionUrlNameMain="${distributionUrlNameMain%-bin}"[m
[31m-MAVEN_HOME="$HOME/.m2/wrapper/dists/${distributionUrlNameMain-}/$(hash_string "$distributionUrl")"[m
[31m-[m
[31m-exec_maven() {[m
[31m-  unset MVNW_VERBOSE MVNW_USERNAME MVNW_PASSWORD MVNW_REPOURL || :[m
[31m-  exec "$MAVEN_HOME/bin/$MVN_CMD" "$@" || die "cannot exec $MAVEN_HOME/bin/$MVN_CMD"[m
[31m-}[m
[31m-[m
[31m-if [ -d "$MAVEN_HOME" ]; then[m
[31m-  verbose "found existing MAVEN_HOME at $MAVEN_HOME"[m
[31m-  exec_maven "$@"[m
[31m-fi[m
[31m-[m
[31m-case "${distributionUrl-}" in[m
[31m-*?-bin.zip | *?maven-mvnd-?*-?*.zip) ;;[m
[31m-*) die "distributionUrl is not valid, must match *-bin.zip or maven-mvnd-*.zip, but found '${distributionUrl-}'" ;;[m
[31m-esac[m
[31m-[m
[31m-# prepare tmp dir[m
[31m-if TMP_DOWNLOAD_DIR="$(mktemp -d)" && [ -d "$TMP_DOWNLOAD_DIR" ]; then[m
[31m-  clean() { rm -rf -- "$TMP_DOWNLOAD_DIR"; }[m
[31m-  trap clean HUP INT TERM EXIT[m
[31m-else[m
[31m-  die "cannot create temp dir"[m
[31m-fi[m
[31m-[m
[31m-mkdir -p -- "${MAVEN_HOME%/*}"[m
[31m-[m
[31m-# Download and Install Apache Maven[m
[31m-verbose "Couldn't find MAVEN_HOME, downloading and installing it ..."[m
[31m-verbose "Downloading from: $distributionUrl"[m
[31m-verbose "Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName"[m
[31m-[m
[31m-# select .zip or .tar.gz[m
[31m-if ! command -v unzip >/dev/null; then[m
[31m-  distributionUrl="${distributionUrl%.zip}.tar.gz"[m
[31m-  distributionUrlName="${distributionUrl##*/}"[m
[31m-fi[m
[31m-[m
[31m-# verbose opt[m
[31m-__MVNW_QUIET_WGET=--quiet __MVNW_QUIET_CURL=--silent __MVNW_QUIET_UNZIP=-q __MVNW_QUIET_TAR=''[m
[31m-[ "${MVNW_VERBOSE-}" != true ] || __MVNW_QUIET_WGET='' __MVNW_QUIET_CURL='' __MVNW_QUIET_UNZIP='' __MVNW_QUIET_TAR=v[m
[31m-[m
[31m-# normalize http auth[m
[31m-case "${MVNW_PASSWORD:+has-password}" in[m
[31m-'') MVNW_USERNAME='' MVNW_PASSWORD='' ;;[m
[31m-has-password) [ -n "${MVNW_USERNAME-}" ] || MVNW_USERNAME='' MVNW_PASSWORD='' ;;[m
[31m-esac[m
[31m-[m
[31m-if [ -z "${MVNW_USERNAME-}" ] && command -v wget >/dev/null; then[m
[31m-  verbose "Found wget ... using wget"[m
[31m-  wget ${__MVNW_QUIET_WGET:+"$__MVNW_QUIET_WGET"} "$distributionUrl" -O "$TMP_DOWNLOAD_DIR/$distributionUrlName" || die "wget: Failed to fetch $distributionUrl"[m
[31m-elif [ -z "${MVNW_USERNAME-}" ] && command -v curl >/dev/null; then[m
[31m-  verbose "Found curl ... using curl"[m
[31m-  curl ${__MVNW_QUIET_CURL:+"$__MVNW_QUIET_CURL"} -f -L -o "$TMP_DOWNLOAD_DIR/$distributionUrlName" "$distributionUrl" || die "curl: Failed to fetch $distributionUrl"[m
[31m-elif set_java_home; then[m
[31m-  verbose "Falling back to use Java to download"[m
[31m-  javaSource="$TMP_DOWNLOAD_DIR/Downloader.java"[m
[31m-  targetZip="$TMP_DOWNLOAD_DIR/$distributionUrlName"[m
[31m-  cat >"$javaSource" <<-END[m
[31m-	public class Downloader extends java.net.Authenticator[m
[31m-	{[m
[31m-	  protected java.net.PasswordAuthentication getPasswordAuthentication()[m
[31m-	  {[m
[31m-	    return new java.net.PasswordAuthentication( System.getenv( "MVNW_USERNAME" ), System.getenv( "MVNW_PASSWORD" ).toCharArray() );[m
[31m-	  }[m
[31m-	  public static void main( String[] args ) throws Exception[m
[31m-	  {[m
[31m-	    setDefault( new Downloader() );[m
[31m-	    java.nio.file.Files.copy( java.net.URI.create( args[0] ).toURL().openStream(), java.nio.file.Paths.get( args[1] ).toAbsolutePath().normalize() );[m
[31m-	  }[m
[31m-	}[m
[31m-	END[m
[31m-  # For Cygwin/MinGW, switch paths to Windows format before running javac and java[m
[31m-  verbose " - Compiling Downloader.java ..."[m
[31m-  "$(native_path "$JAVACCMD")" "$(native_path "$javaSource")" || die "Failed to compile Downloader.java"[m
[31m-  verbose " - Running Downloader.java ..."[m
[31m-  "$(native_path "$JAVACMD")" -cp "$(native_path "$TMP_DOWNLOAD_DIR")" Downloader "$distributionUrl" "$(native_path "$targetZip")"[m
[31m-fi[m
[31m-[m
[31m-# If specified, validate the SHA-256 sum of the Maven distribution zip file[m
[31m-if [ -n "${distributionSha256Sum-}" ]; then[m
[31m-  distributionSha256Result=false[m
[31m-  if [ "$MVN_CMD" = mvnd.sh ]; then[m
[31m-    echo "Checksum validation is not supported for maven-mvnd." >&2[m
[31m-    echo "Please disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties." >&2[m
[31m-    exit 1[m
[31m-  elif command -v sha256sum >/dev/null; then[m
[31m-    if echo "$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName" | sha256sum -c >/dev/null 2>&1; then[m
[31m-      distributionSha256Result=true[m
[31m-    fi[m
[31m-  elif command -v shasum >/dev/null; then[m
[31m-    if echo "$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName" | shasum -a 256 -c >/dev/null 2>&1; then[m
[31m-      distributionSha256Result=true[m
[31m-    fi[m
[31m-  else[m
[31m-    echo "Checksum validation was requested but neither 'sha256sum' or 'shasum' are available." >&2[m
[31m-    echo "Please install either command, or disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties." >&2[m
[31m-    exit 1[m
[31m-  fi[m
[31m-  if [ $distributionSha256Result = false ]; then[m
[31m-    echo "Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised." >&2[m
[31m-    echo "If you updated your Maven version, you need to update the specified distributionSha256Sum property." >&2[m
[31m-    exit 1[m
[31m-  fi